'=========== Umar ==========='

# Comprehesion

# 1) Напишите list comprehension, который создаст список квадратов чисел от 1 до 10

list1 = [i**2 for i in range(1,11)]
print(list1)

# 2) Используя list comprehension, создайте список только из четных чисел от 1 до 20

list2 = [i for i in range(1,21) if i%2==0]
print(list2)

# 3) Используя dict comprehension, создайте словарь, где ключ — число от 1 до 5, а значение — его квадрат.

dict1 = {k:k**2 for k in range(1,6)}
print(dict1)

# 4) вам дан список words = ["python", "java", "swift", "golang", "javascript"], используя list comprehension, создайте новый список из слов длиной больше 5 символов

words = ["python", "java", "swift", "golang", "javascript"]
words2 = [i for i in words if len(i) > 5]
print(words2)

# 5) Вам дан список, words = ["apple", "banana", "cherry"], используя list comprehension, получите список этих слов в верхнем регистре

words = ["apple", "banana", "cherry"]
words2 = [i.upper() for i in words]
print(words2)

'-----------------------------------------------------------------------------------'

# try-except 

# 1) напишите полный синтаксис конструкции try-except

try:
    ...
except:
    ...
else:
    ...
finally:
    ...     

# 2)Напишите код, который пытается вывести значение переменной, не определенной ранее, и обрабатывает исключение, выводя сообщение "Такой переменной не существует!".

try:
    print(work)
except NameError:
    print('Такой переменной не существует!')

# 3) Напишите код, который принимает два числа от пользователя и выводит результат их деления. Обработайте исключение, которое выйдет при делении на ноль, выводя сообщение "На ноль делить нельзя"

try:
    first_num = int(input('Введите первое число: '))
    second_num = int(input('Введите второе число: '))
    print(f'Ответ: {first_num / second_num}')
except ZeroDivisionError:
    print('На ноль делить нельзя')

# 4)Напишите код, который принимает две строки от пользователя, преобразует их в целые числа и выводит их сумму. Обработайте исключение которое выйдет в случае если пользователь передал не число а строку, выводя сообщение "Введите число!"

count = 0
while count == 0:
    try:
        first_num = input('Введите первое число: ')
        second_num = input('Введите второе число: ')
        print(f'Сумма чисел: {int(first_num) + int(second_num)}')
        count += 1
    except ValueError:
        print('Введите число !')
        
# 5)  Напишите код, который пытается получить значение по ключу из словаря. Обработайте исключение, которое выйдет если такого ключа нет, выводя сообщение "Нет такого ключа!".

dict1 = {1: 'Эмир', 2: 'Умар'}
try:
    dict1[4]
except KeyError:
    print('Нет такого ключа!')

# 6)напишите код, который пытается получить элемент списка по индексу. Обработайте исключение которое выйдет если такого индекса нет, выводя сообщение "Нет такого элемента!"

list1 = [1,2,3,4,4,5,7,8,9]
try:
    list1[100]
except IndexError:
    print('Нет такого элемента!')

# 7)Напишите код, который принимает возраст от пользователя и выбрасывает исключение ValueError с сообщением "Доступ запрещён", если возраст меньше 18. Обработайте это исключение, выводя сообщение "Введён некорректный возраст". Используйте блоки else и finally для вывода сообщений "Спасибо" и "До свидания!" соответственно.

try:
    age = int(input('Введите возраст: '))
    if age < 18:
        print('Доступ запрешён') 
except ValueError:
    print('Введен некорректный возраст')
else:
    print('Спасибо')
finally:
    print('До свиданя!')

# 8) Напишите код, который принимает два числа от пользователя и выводит результат их деления. Обработайте исключения ValueError и ZeroDivisionError, выводя сообщение "Произошла ошибка!".

try:
    first_num = int(input('Введите первое число: '))
    second_num = int(input('Введите второе число: '))
    print(f'Вывод деления: {first_num / second_num}')
except (ValueError, ZeroDivisionError):
    print('Произошла ошибка!')



# 9) Напишите код, который принимает сумму денег от пользователя и выбрасывает исключение ValueError с сообщением "Сумма не может быть отрицательной!", если сумма меньше 0. Обработайте это исключение и выведите сообщение ошибки. Если исключение не возникло, выведите сумму.

try:
    sum_money = int(input('Введите сумму денег: '))
    print(f'Сумма денег: {sum_money}')
    if sum_money < 0:
        print('Сумма не может быть отрицательной!')
except ValueError:
    print('Произошла ошибка!')

# 10) Напишите код, который пытается сложить строку и число. Обработайте исключение TypeError, выводя сообщение "Unsupported option"

try:
    print(5 + '5')
except TypeError:
    print('Unsupported option')